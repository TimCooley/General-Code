


----------------------------------------------------------- RECONCILIATION PERCENTAGE ALL

WITH RECONCILED_ACCOUNTS AS (
select COUNT(*) AS "RECONCILED_ACCOUNTS"
from case_specialists.RECON_NOTES
--where client_name = &CLIENT_NAME_VAR
WHERE RECON_FLAG = 'Y'
AND RECON_ID IS NOT NULL)
,
UNRECONCILED_ACCOUNTS AS (
SELECT COUNT(*) AS "UNRECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
--where client_name = &CLIENT_NAME_VAR
WHERE RECON_FLAG = 'N'
AND RECON_ID IS NOT NULL
)
SELECT R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS AS "TOTAL ACCOUNTS", R.RECONCILED_ACCOUNTS, UR.UNRECONCILED_ACCOUNTS,  ROUND (((( R.RECONCILED_ACCOUNTS / (R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS)) )*100),1) AS "RECONCILIATION PERCENTAGE"
FROM RECONCILED_ACCOUNTS R, UNRECONCILED_ACCOUNTS UR
;







----------------------------------------------------------- NATURALLY RECONCILED PERCENTAGE PER CLIENT


WITH NATURALLY_RECONCILES AS (
select COUNT(*) AS "NATURALLY_RECONCILES"
from case_specialists.RECON_NOTES
where client_name = &CLIENT_NAME_VAR
AND RECON_ID = 100
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
)
,
DOES_NOT_NATURALLY_RECONCILE AS (
SELECT COUNT(*) AS "DOES_NOT_NATURALLY_RECONCILE"
FROM case_specialists.RECON_NOTES
where client_name = &CLIENT_NAME_VAR
AND RECON_ID <> 100
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
)
SELECT R.NATURALLY_RECONCILES + UR.DOES_NOT_NATURALLY_RECONCILE AS "TOTAL ACCOUNTS", R.NATURALLY_RECONCILES, UR.DOES_NOT_NATURALLY_RECONCILE,  ROUND (((( R.NATURALLY_RECONCILES / (R.NATURALLY_RECONCILES + UR.DOES_NOT_NATURALLY_RECONCILE)) )*100),1) AS "RECONCILIATION PERCENTAGE"
FROM NATURALLY_RECONCILES R, DOES_NOT_NATURALLY_RECONCILE UR
;




---------------------------------------------------------- ALL CLIENTS RECONCILIATION PERCENTAGE

SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN UNRECONCILED_ACCOUNTS WHEN UNRECONCILED_ACCOUNTS IS NULL THEN RECONCILED_ACCOUNTS ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN 0 ELSE RECONCILED_ACCOUNTS END AS "RECONCILED_ACCOUNTS" , NVL(UNRECONCILED_ACCOUNTS,0) AS "UNRECONCILED_ACCOUNTS", NVL(RECONCILIATION_PERCENTAGE, 100)AS "RECONCILIATION_PERCENTAGE"
FROM

(WITH RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'Y'
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
GROUP BY CLIENT_NAME)
,

UNRECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "UNRECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'N'
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS AS "TOTAL_ACCOUNTS", R.RECONCILED_ACCOUNTS, UR.UNRECONCILED_ACCOUNTS,  ROUND (((( R.RECONCILED_ACCOUNTS / (R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS)) )*100),1) AS "RECONCILIATION_PERCENTAGE"
FROM RECONCILED_ACCOUNTS R 
FULL OUTER JOIN UNRECONCILED_ACCOUNTS UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;


---------------------------------------------------------- ALL CLIENTS RECONCILIATION PERCENTAGE POST CDR

SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN UNRECONCILED_ACCOUNTS WHEN UNRECONCILED_ACCOUNTS IS NULL THEN RECONCILED_ACCOUNTS ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN 0 ELSE RECONCILED_ACCOUNTS END AS "RECONCILED_ACCOUNTS" , NVL(UNRECONCILED_ACCOUNTS,0) AS "UNRECONCILED_ACCOUNTS", NVL(RECONCILIATION_PERCENTAGE, 100)AS "RECONCILIATION_PERCENTAGE"
FROM

(WITH RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'Y'
and CDR_CREATED IN ('Y')
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062828)
GROUP BY CLIENT_NAME)
,

UNRECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "UNRECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'N'
and CDR_CREATED IN ('Y')
AND RECON_ID IS NOT NULL
--AND ACCOUNT_ID IN (4062828)
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS AS "TOTAL_ACCOUNTS", R.RECONCILED_ACCOUNTS, UR.UNRECONCILED_ACCOUNTS,  ROUND (((( R.RECONCILED_ACCOUNTS / (R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS)) )*100),1) AS "RECONCILIATION_PERCENTAGE"
FROM RECONCILED_ACCOUNTS R 
FULL OUTER JOIN UNRECONCILED_ACCOUNTS UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;   


 
         
         
            
            
---------------------------------------------------------- NATURAL_RECONCILIATION_PERCENTAGE

SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN NOT_NATURALLY_RECONCILED_ACCOUNTS WHEN NOT_NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN NATURALLY_RECONCILED_ACCOUNTS ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN 0 ELSE NATURALLY_RECONCILED_ACCOUNTS END AS "NATURALLY_RECONCILED_ACCOUNTS" , NVL(NOT_NATURALLY_RECONCILED_ACCOUNTS,0) AS "NOT_NATURALLY_RECONCILED_ACCOUNTS", NVL(NATURAL_RECONCILIATION_PERCENTAGE, 100)AS "NATURAL_RECONCILIATION_PERCENTAGE"
FROM

(WITH NATURALLY_RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "NATURALLY_RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_ID = 100
--AND client_name in ('******')
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME)
,

NOT_NATURALLY_RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "NOT_NATURALLY_RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_ID <> 100
--AND client_name in ('******')
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.NATURALLY_RECONCILED_ACCOUNTS + UR.NOT_NATURALLY_RECONCILED_ACCOUNTS AS "TOTAL_ACCOUNTS", R.NATURALLY_RECONCILED_ACCOUNTS, UR.NOT_NATURALLY_RECONCILED_ACCOUNTS,  ROUND (((( R.NATURALLY_RECONCILED_ACCOUNTS / (R.NATURALLY_RECONCILED_ACCOUNTS + UR.NOT_NATURALLY_RECONCILED_ACCOUNTS)) )*100),1) AS "NATURAL_RECONCILIATION_PERCENTAGE"
FROM NATURALLY_RECONCILED_ACCOUNTS R 
FULL OUTER JOIN NOT_NATURALLY_RECONCILED_ACCOUNTS UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;
            
            
                     
         
---------------------------------------------------------- CDRS NEEDED PERCENTAGE

SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN CDR_NOT_NEEDED IS NULL THEN CDR_NEEDED WHEN CDR_NEEDED IS NULL THEN CDR_NOT_NEEDED ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN CDR_NOT_NEEDED IS NULL THEN 0 ELSE CDR_NOT_NEEDED END AS "CDR_NOT_NEEDED" , NVL(CDR_NEEDED,0) AS "CDR_NEEDED", NVL(RECONCILIATION_PERCENTAGE, 100)AS "CDR_NOT_NEEDED_PERCENTAGE"
FROM

(WITH CDR_NOT_NEEDED AS
(SELECT CLIENT_NAME, COUNT(*) AS "CDR_NOT_NEEDED"
FROM case_specialists.RECON_NOTES
where RECON_ID IS NOT NULL
and CDR_CREATED IN ('N')
AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
GROUP BY CLIENT_NAME)
,

CDR_NEEDED AS
(SELECT CLIENT_NAME, COUNT(*) AS "CDR_NEEDED"
FROM case_specialists.RECON_NOTES
where CDR_CREATED IN ('Y')
AND RECON_ID IS NOT NULL
AND ACCOUNT_ID IN (4062708, 4062828, 4062582, 4062620)
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.CDR_NOT_NEEDED + UR.CDR_NEEDED AS "TOTAL_ACCOUNTS", R.CDR_NOT_NEEDED, UR.CDR_NEEDED,  ROUND (((( R.CDR_NOT_NEEDED / (R.CDR_NOT_NEEDED + UR.CDR_NEEDED)) )*100),1) AS "RECONCILIATION_PERCENTAGE"
FROM CDR_NOT_NEEDED R 
FULL OUTER JOIN CDR_NEEDED UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;   
       
        
           
            
            
--**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**--            
--**--**----**--**----**--**----**--**-- WARNING: CONSTRUCTION ZONE BELOW --**--**----**--**----**--**----**--**----**--
--**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**----**--**--          
            
            
         
---------------------------------------------------------- ALL CLIENTS ACCOUNTS CDRS NEEDED PERCENTAGE

SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN ACCOUNTS_THAT_DID_NOT_NEED_CDR IS NULL THEN ACCOUNTS_THAT_DID_NEED_CDR WHEN ACCOUNTS_THAT_DID_NEED_CDR IS NULL THEN ACCOUNTS_THAT_DID_NOT_NEED_CDR ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN ACCOUNTS_THAT_DID_NOT_NEED_CDR IS NULL THEN 0 ELSE ACCOUNTS_THAT_DID_NOT_NEED_CDR END AS "ACCOUNTS_THAT_DID_NOT_NEED_CDR" , NVL(ACCOUNTS_THAT_DID_NEED_CDR,0) AS "ACCOUNTS_THAT_DID_NEED_CDR", NVL(RECONCILIATION_PERCENTAGE, 100)AS "ACCOUNTS_THAT_DID_NOT_NEED_CDR_PERCENTAGE"
FROM

(WITH ACCOUNTS_THAT_DID_NOT_NEED_CDR AS
(SELECT CLIENT_NAME, COUNT(*) AS "ACCOUNTS_THAT_DID_NOT_NEED_CDR"
FROM case_specialists.RECON_NOTES
where RECON_ID IS NOT NULL
and CDR_CREATED IN ('N')
GROUP BY CLIENT_NAME)
,

ACCOUNTS_THAT_DID_NEED_CDR AS
(SELECT CLIENT_NAME, COUNT(*) AS "ACCOUNTS_THAT_DID_NEED_CDR"
FROM case_specialists.RECON_NOTES
where CDR_CREATED IN ('Y')
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.ACCOUNTS_THAT_DID_NOT_NEED_CDR + UR.ACCOUNTS_THAT_DID_NEED_CDR AS "TOTAL_ACCOUNTS", R.ACCOUNTS_THAT_DID_NOT_NEED_CDR, UR.ACCOUNTS_THAT_DID_NEED_CDR,  ROUND (((( R.ACCOUNTS_THAT_DID_NOT_NEED_CDR / (R.ACCOUNTS_THAT_DID_NOT_NEED_CDR + UR.ACCOUNTS_THAT_DID_NEED_CDR)) )*100),1) AS "RECONCILIATION_PERCENTAGE"
FROM ACCOUNTS_THAT_DID_NOT_NEED_CDR R 
FULL OUTER JOIN ACCOUNTS_THAT_DID_NEED_CDR UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;   
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
  /*          
            
            
            
            ---------------------------------------------------------- CDR_RECONCILED_ACCOUNT_PERCENTAGE


select CLIENT_NAME, case when TOTAL_ACCOUNTS is null then CDR_RECONCILED_ACCOUNT ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS, CDR_RECONCILED_ACCOUNT, NVL(CDR_DID_NOT_RECONCILE_ACCOUNT,0) AS "CDR_DID_NOT_RECONCILE_ACCOUNT", NVL(CDR_RECONCILED_ACCOUNT_PERCENTAGE, 100)AS "CDR_RECONCILED_ACCOUNT_PERCENTAGE"
from (

WITH 
CDR_RECONCILED_ACCOUNT AS (
select CLIENT_NAME, COUNT(*) AS "CDR_RECONCILED_ACCOUNT"
from case_specialists.RECON_NOTES
--where client_name in ('******')
WHERE RECON_ID = 103
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME)
,
CDR_DID_NOT_RECONCILE_ACCOUNT AS (
SELECT CLIENT_NAME, COUNT(*) AS "CDR_DID_NOT_RECONCILE_ACCOUNT"
FROM case_specialists.RECON_NOTES
--where client_name in ('******')
WHERE RECON_ID in ( 104,301, 302, 303)
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)
SELECT R.CLIENT_NAME, R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT AS "TOTAL_ACCOUNTS", R.CDR_RECONCILED_ACCOUNT, UR.CDR_DID_NOT_RECONCILE_ACCOUNT,  ROUND (((( R.CDR_RECONCILED_ACCOUNT / (R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT)) )*100),1) AS "CDR_RECONCILED_ACCOUNT_PERCENTAGE"
FROM CDR_RECONCILED_ACCOUNT R, CDR_DID_NOT_RECONCILE_ACCOUNT UR
WHERE R.CLIENT_NAME = UR.CLIENT_NAME(+)
ORDER BY R.CLIENT_NAME

-- CLIENTS WITH ACCOUNT > 20 
AND R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT > 20
ORDER BY R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT DESC
)
;  
            
            
            
     
          
            
            
--------------------------------------------------------- ALL CLIENTS RECONCILIATION PERCENTAGE




SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN UNRECONCILED_ACCOUNTS WHEN UNRECONCILED_ACCOUNTS IS NULL THEN RECONCILED_ACCOUNTS ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN RECONCILED_ACCOUNTS IS NULL THEN 0 ELSE RECONCILED_ACCOUNTS END AS "RECONCILED_ACCOUNTS" , NVL(UNRECONCILED_ACCOUNTS,0) AS "UNRECONCILED_ACCOUNTS", NVL(RECONCILIATION_PERCENTAGE, 100)AS "RECONCILIATION_PERCENTAGE"
FROM

(WITH RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'Y'
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME)
,

UNRECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "UNRECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_FLAG = 'N'
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS AS "TOTAL_ACCOUNTS", R.RECONCILED_ACCOUNTS, UR.UNRECONCILED_ACCOUNTS,  ROUND (((( R.RECONCILED_ACCOUNTS / (R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS)) )*100),1) AS "RECONCILIATION_PERCENTAGE"
FROM RECONCILED_ACCOUNTS R 
FULL OUTER JOIN UNRECONCILED_ACCOUNTS UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;

            
            
            
       
---------------------------------------------------------- CDR DID OR DID NOT RECONCILE THE ACCOUNT


select CLIENT_NAME, case when TOTAL_ACCOUNTS is null then CDR_RECONCILED_ACCOUNT ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS, CDR_RECONCILED_ACCOUNT, NVL(CDR_DID_NOT_RECONCILE_ACCOUNT,0) AS "CDR_DID_NOT_RECONCILE_ACCOUNT", NVL(CDR_RECONCILED_ACCOUNT_PERCENTAGE, 100)AS "CDR_RECONCILED_ACCOUNT_PERCENTAGE"
from (

WITH 
CDR_RECONCILED_ACCOUNT AS (
select CLIENT_NAME, COUNT(*) AS "CDR_RECONCILED_ACCOUNT"
from case_specialists.RECON_NOTES
--where client_name in ('******')
WHERE RECON_ID = 103
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME)
,
CDR_DID_NOT_RECONCILE_ACCOUNT AS (
SELECT CLIENT_NAME, COUNT(*) AS "CDR_DID_NOT_RECONCILE_ACCOUNT"
FROM case_specialists.RECON_NOTES
--where client_name in ('******')
WHERE RECON_ID = 104
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)
SELECT R.CLIENT_NAME, R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT AS "TOTAL_ACCOUNTS", R.CDR_RECONCILED_ACCOUNT, UR.CDR_DID_NOT_RECONCILE_ACCOUNT,  ROUND (((( R.CDR_RECONCILED_ACCOUNT / (R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT)) )*100),1) AS "CDR_RECONCILED_ACCOUNT_PERCENTAGE"
FROM CDR_RECONCILED_ACCOUNT R, CDR_DID_NOT_RECONCILE_ACCOUNT UR
WHERE R.CLIENT_NAME = UR.CLIENT_NAME(+)
ORDER BY R.CLIENT_NAME

-- CLIENTS WITH ACCOUNT > 20 
*//*AND R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT > 20
ORDER BY R.CDR_RECONCILED_ACCOUNT + UR.CDR_DID_NOT_RECONCILE_ACCOUNT DESC*//*
)
;
     
     
            
            
            
---------------------------------------------------------- RECONCILIATION PERCENTAGE PER CLIENT 

WITH RECONCILED_ACCOUNTS AS (
select COUNT(*) AS "RECONCILED_ACCOUNTS"
from case_specialists.RECON_NOTES
where client_name = &CLIENT_NAME_VAR
AND RECON_FLAG = 'Y'
AND RECON_ID IS NOT NULL)
,
UNRECONCILED_ACCOUNTS AS (
SELECT COUNT(*) AS "UNRECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
where client_name = &CLIENT_NAME_VAR
AND RECON_FLAG = 'N'
AND RECON_ID IS NOT NULL
)
SELECT R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS AS "TOTAL ACCOUNTS", R.RECONCILED_ACCOUNTS, UR.UNRECONCILED_ACCOUNTS,  ROUND (((( R.RECONCILED_ACCOUNTS / (R.RECONCILED_ACCOUNTS + UR.UNRECONCILED_ACCOUNTS)) )*100),1) AS "RECONCILIATION PERCENTAGE"
FROM RECONCILED_ACCOUNTS R, UNRECONCILED_ACCOUNTS UR
;







---------------------------------------------------------- NATURAL_RECONCILIATION_PERCENTAGE




SELECT CLIENT_NAME,CASE WHEN TOTAL_ACCOUNTS IS NULL THEN (CASE WHEN NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN NOT_NATURALLY_RECONCILED_ACCOUNTS WHEN NOT_NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN NATURALLY_RECONCILED_ACCOUNTS ELSE TOTAL_ACCOUNTS 
END)

ELSE TOTAL_ACCOUNTS END AS TOTAL_ACCOUNTS,CASE WHEN NATURALLY_RECONCILED_ACCOUNTS IS NULL THEN 0 ELSE NATURALLY_RECONCILED_ACCOUNTS END AS "NATURALLY_RECONCILED_ACCOUNTS" , NVL(NOT_NATURALLY_RECONCILED_ACCOUNTS,0) AS "NOT_NATURALLY_RECONCILED_ACCOUNTS", NVL(NATURAL_RECONCILIATION_PERCENTAGE, 100)AS "NATURAL_RECONCILIATION_PERCENTAGE"
FROM

(WITH NATURALLY_RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "NATURALLY_RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_ID = 100
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME)
,

NOT_NATURALLY_RECONCILED_ACCOUNTS AS
(SELECT CLIENT_NAME, COUNT(*) AS "NOT_NATURALLY_RECONCILED_ACCOUNTS"
FROM case_specialists.RECON_NOTES
WHERE RECON_ID <> 100
AND RECON_ID IS NOT NULL
GROUP BY CLIENT_NAME
)

SELECT CASE 
WHEN R.CLIENT_NAME IS NULL THEN UR.CLIENT_NAME ELSE R.CLIENT_NAME END CLIENT_NAME, R.NATURALLY_RECONCILED_ACCOUNTS + UR.NOT_NATURALLY_RECONCILED_ACCOUNTS AS "TOTAL_ACCOUNTS", R.NATURALLY_RECONCILED_ACCOUNTS, UR.NOT_NATURALLY_RECONCILED_ACCOUNTS,  ROUND (((( R.NATURALLY_RECONCILED_ACCOUNTS / (R.NATURALLY_RECONCILED_ACCOUNTS + UR.NOT_NATURALLY_RECONCILED_ACCOUNTS)) )*100),1) AS "NATURAL_RECONCILIATION_PERCENTAGE"
FROM NATURALLY_RECONCILED_ACCOUNTS R 
FULL OUTER JOIN NOT_NATURALLY_RECONCILED_ACCOUNTS UR
ON R.CLIENT_NAME = UR.CLIENT_NAME 
ORDER BY  R.CLIENT_NAME
)
;







select *
from case_specialists.RECON_NOTES
where  CLIENT_NAME = '******'
and account_id  in (

139,132,129

 )
ORDER BY CLIENT_NAME
;
